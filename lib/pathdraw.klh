--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

declare_member(class_name,init,class_name,init)
ROUTINE init(idod : INTEGER; coordSys : INTEGER; length : REAL; rotation : REAL) FROM class_name
declare_member(class_name,delete,class_name,dstr)
ROUTINE delete FROM class_name
declare_member(class_name,set_origin,class_name,stor)
ROUTINE set_origin(idod : INTEGER; coordSys : INTEGER; length : REAL; rotation : REAL) FROM class_name
declare_member(class_name,get_lines,class_name,gtlns)
ROUTINE get_lines(out_lines : PATH nodedata = t_VEC_PATH) FROM class_name
declare_member(class_name,get_contours,class_name,gtctr)
ROUTINE get_contours(out_contour : PATH nodedata = t_VEC_PATH) FROM class_name
declare_member(class_name,drawPad,class_name,drpad)
ROUTINE drawPad(padprm : t_PAD_VARS ; rastprm : t_PATH_RAST) FROM class_name
declare_member(class_name,drawHex,class_name,drhex)
ROUTINE drawHex(hexprm : t_HEX_VARS ; polyprm : t_PATH_VARS ; rastprm : t_PATH_RAST) FROM class_name
declare_member(class_name,drawCustom,class_name,drcus)
ROUTINE drawCustom(filename : STRING ; polyprm : t_PATH_VARS ; rastprm : t_PATH_RAST ; poly_frame : XYZWPR) FROM class_name

%endif --end header