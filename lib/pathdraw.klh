--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

declare_member(class_name,init,class_name,init)
ROUTINE init(frm : XYZWPR; rastprm_ : t_PATH_RAST; flipCanvas_ : BOOLEAN) FROM class_name
declare_member(class_name,delete,class_name,dstr)
ROUTINE delete FROM class_name
declare_member(class_name,set_origin,class_name,stor)
ROUTINE set_origin(frm : XYZWPR) FROM class_name
declare_member(class_name,flip_origin,class_name,fpor)
ROUTINE flip_origin FROM class_name
declare_member(class_name,get_length,class_name,gtlth)
ROUTINE get_length : REAL FROM class_name
declare_member(class_name,get_lines,class_name,gtlns)
ROUTINE get_lines(out_lines : PATH nodedata = t_VEC_PATH) FROM class_name
declare_member(class_name,get_contours,class_name,gtctr)
ROUTINE get_contours(out_contour : PATH nodedata = t_VEC_PATH) FROM class_name
declare_member(class_name,raster,class_name,rast)
ROUTINE raster FROM class_name
--polygon manipulation
declare_member(class_name,translate_canvas,class_name,trcv)
ROUTINE translate_canvas(vec : VECTOR) FROM class_name
declare_member(class_name,rotate_canvas,class_name,rtcv)
ROUTINE rotate_canvas(vec : VECTOR) FROM class_name
declare_member(class_name,copy,class_name,copy)
ROUTINE copy(direction1 : VECTOR; instances1 : INTEGER; direction2 : VECTOR; instances2 : INTEGER) FROM class_name
--polygon creation methods
declare_member(class_name,makePad,class_name,mkpad)
ROUTINE makePad(padprm : t_PAD_VARS ; polyprm : t_PATH_VARS; start : VECTOR) FROM class_name
declare_member(class_name,makePads,class_name,mkpds)
ROUTINE makePads(padprm : t_PAD_VARS ; polyprm : t_PATH_VARS; start : VECTOR) FROM class_name
declare_member(class_name,makeHex,class_name,mkhex)
ROUTINE makeHex(hexprm : t_HEX_VARS ; polyprm : t_PATH_VARS; start : VECTOR) FROM class_name
declare_member(class_name,makeCustom,class_name,mkcus)
ROUTINE makeCustom(filename : STRING ; polyprm : t_PATH_VARS) FROM class_name

%endif --end header