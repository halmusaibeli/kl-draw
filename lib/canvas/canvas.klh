--header
%include header_guard.m
--oop
%include namespace.m

--start header file
header_if -- ifndef class
header_def -- define class

declare_member(class_name,delete,class_name,del)
ROUTINE delete FROM class_name
declare_member(class_name,new,class_name,new)
ROUTINE new FROM class_name
declare_member(class_name,init,class_name,init)
ROUTINE init(frm_ : XYZWPR; boundary : BOOLEAN; start_angle_ : REAL; dir_ : INTEGER; & 
             wall_lines_ : INTEGER; line_width_ : REAL; line_pitch_ : REAL) FROM class_name
declare_member(class_name,init2,class_name,int2)
ROUTINE init2(frm_ : XYZWPR; boundary : BOOLEAN; rast : t_RASTER) FROM class_name
declare_member(class_name,erase,class_name,eras)
ROUTINE erase FROM class_name
declare_member(class_name,import_shape,class_name,imps)
ROUTINE import_shape(filename : STRING) FROM class_name
declare_member(class_name,set_canvas,class_name,scnv)
ROUTINE set_canvas(frm_ : XYZWPR) FROM class_name
declare_member(class_name,flip_canvas,class_name,fpcv)
ROUTINE flip_canvas FROM class_name
declare_member(class_name,raster_on_boundary,class_name,rbnd)
ROUTINE raster_on_boundary(boundary : BOOLEAN) FROM class_name
declare_member(class_name,set_params,class_name,sprm)
ROUTINE set_params(start_angle : REAL; dir : INTEGER; wall_lines : INTEGER; &
                  line_width : REAL; line_pitch : REAL) FROM class_name
declare_member(class_name,get_params,class_name,gprm)
ROUTINE get_params : t_RASTER FROM class_name
declare_member(class_name,append_vertex,class_name,avrt)
ROUTINE append_vertex(vertex : VECTOR; polygon : INTEGER) FROM class_name
declare_member(class_name,append_polygon,class_name,aplp)
ROUTINE append_polygon(verticies : PATH nodedata = t_VERTEX) FROM class_name
declare_member(class_name,append_polygon_array,class_name,apla)
ROUTINE append_polygon_array(verticies : ARRAY[*] OF VECTOR) FROM class_name
declare_member(class_name,get_poly,class_name,gply)
ROUTINE get_poly(polygon : INTEGER; out_poly : PATH nodedata = t_VERTEX) FROM class_name
declare_member(class_name,get_lines,class_name,glns)
ROUTINE get_lines(start_i : INTEGER; end_i : INTEGER; out_lines : PATH nodedata = t_SEG2D_POLY) FROM class_name
declare_member(class_name,get_contours,class_name,gctr)
ROUTINE get_contours(start_i : INTEGER; end_i : INTEGER; out_cntrs : PATH nodedata = t_VEC_PATH) FROM class_name
declare_member(class_name,get_bounding_box_drawing,class_name,gbxd)
ROUTINE get_bounding_box_drawing : t_RECT FROM class_name
declare_member(class_name,get_bounding_box_poly,class_name,gbxp)
ROUTINE get_bounding_box_poly(polygon : INTEGER) : t_RECT FROM class_name
declare_member(class_name,get_canvas_length,class_name,gcvl)
ROUTINE get_canvas_length : REAL FROM class_name
declare_member(class_name,get_polygon_count,class_name,gplc)
ROUTINE get_polygon_count : INTEGER FROM class_name
declare_member(class_name,calc_polygon_count,class_name,cplc)
ROUTINE calc_polygon_count : INTEGER FROM class_name
--manipulate canvas
declare_member(class_name,translate_canvas,class_name,trcv)
ROUTINE translate_canvas(vec : VECTOR) FROM class_name
declare_member(class_name,rotate_polygon,class_name,rtpl)
ROUTINE rotate_polygon(polygon : INTEGER; angle : REAL) FROM class_name
declare_member(class_name,scale_polygon_along_axes,class_name,spax)
ROUTINE scale_polygon_along_axes(polygon : INTEGER; factor : VECTOR) FROM class_name
--rastering
declare_member(class_name,trace,class_name,trce)
ROUTINE trace(line_type : INTEGER) FROM class_name
declare_member(class_name,raster,class_name,rast)
ROUTINE raster(line_type : INTEGER) FROM class_name
declare_member(class_name,lines_to_vec_path,class_name,lvph)
ROUTINE lines_to_vec_path(out_lines : PATH nodedata = t_VEC_PATH) FROM class_name
declare_member(class_name,contours_to_vec_path,class_name,cvph)
ROUTINE contours_to_vec_path(out_cntrs : PATH nodedata = t_VEC_PATH) FROM class_name
%endif --end header