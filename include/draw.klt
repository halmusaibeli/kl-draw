%ifndef draw_t
%define draw_t

%include shapes.klt

TYPE

  --equation for line:
  -- p = p_0 + v*t
  -- where -INF < t < INF
  t_LINE2D FROM draw = STRUCTURE
    point : VECTOR
    vec : VECTOR
  ENDSTRUCTURE

  --equation for segment:
  -- p = (1-t)*r_o + t*r_1
  -- where 0 < t < 1
  t_SEGMENT2D FROM draw = STRUCTURE
    r0 : VECTOR
    r1 : VECTOR
  ENDSTRUCTURE


  t_VERTEX FROM draw = STRUCTURE
    coords : VECTOR
    nextPoly : SHORT
    polygon : SHORT
  ENDSTRUCTURE

  --(ref: https://www.researchgate.net/publication/220184531_Efficient_Clipping_of_Arbitrary_Polygons)
  --..warning:: If changing update sortintrsct.klt macro for sorting operation
  t_VERT_CLIP FROM draw = STRUCTURE
    coords : VECTOR
    entry_exit : BOOLEAN
    intersect : BOOLEAN
    alpha : REAL
    polygon : SHORT
  ENDSTRUCTURE

  t_TRIANGLE FROM draw = STRUCTURE
    --verticies
    verts : ARRAY[3] OF VECTOR
    convex : BOOLEAN
  ENDSTRUCTURE

  t_RECT FROM shapes = STRUCTURE
    verts : ARRAY[4] OF VECTOR
    vec : ARRAY[2] OF VECTOR
    center : VECTOR
  ENDSTRUCTURE

  t_RASTER FROM shapes = STRUCTURE
    --angle to start trace and raster
    start_angle : REAL
    --travel direction of trace
    -- ccw = 1 cw = -1
    dir : SHORT
    -- no contour lines are drawn if wall_lines=0
    wall_lines : SHORT
    --width of a line
    line_width : REAL
    --line overlap distance
    line_pitch : REAL
  ENDSTRUCTURE


%endif --draw_t
